{
  "version": 3,
  "sources": ["../../node_modules/preact/src/util.js", "../../node_modules/preact/src/options.js", "../../node_modules/preact/src/create-element.js", "../../node_modules/preact/src/component.js", "../../node_modules/preact/src/create-context.js", "../../node_modules/preact/src/constants.js", "../../node_modules/preact/src/diff/children.js", "../../node_modules/preact/src/diff/props.js", "../../node_modules/preact/src/diff/index.js", "../../node_modules/preact/src/render.js", "../../node_modules/preact/src/clone-element.js", "../../node_modules/preact/src/diff/catch-error.js", "../../node_modules/preact/hooks/src/index.js", "../../node_modules/preact/jsx-runtime/src/index.js", "../../tabs/tabs.tsx"],
  "sourcesContent": ["import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\nimport { isArray } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n", "import { useState, useEffect } from \"preact/hooks\";\nimport { render } from \"preact\";\n\nconst dom = document.getElementById(\"tabs\") as HTMLInputElement;\n\ninterface Block {\n    id: string;\n    title: string;\n    content: string;\n    background: string;\n    color: string;\n}\n\nfunction App() {\n    const [blocks, setBlocks] = useState<Block[]>([]);\n    const [active, setActive] = useState<any>(null);\n\n    const getBlocks = () => {\n        const raw = dom.getAttribute(\"data-blocks\")?.replace(/\\s\\s+/g, \" \");\n        const data = raw?.split(\"%\")?.reduce((arr: [], item: string) => {\n            item = item.trim().replaceAll(\"'\", `\"`);\n\n            if (item.length > 0)\n                arr.push( JSON.parse(item) );\n            \n            return arr;\n        }, []) || [];\n        const first = data.at(0);\n\n        setBlocks(data);\n\n        if (first) setActive(first[\"id\"]);\n    }\n\n    useEffect(() => {\n        getBlocks();\n    }, []);\n\n    return (\n        <>\n            <header class=\"grid grid-flow-col auto-cols-fr divide-x shadow-sm\">\n                { blocks.map((block: Block) => \n                    <button\n                        onClick={ () => setActive(block.id) }\n                        style={ active === block.id && { background: block.background, color: block.color }}\n                        className={merge(\"tab-button py-3 px-4 text-uppercase font-semibold\", active === block.id ? \"\" : \"hover:bg-slate-100\")}\n                        data-tab={ block.id }\n                        for={ block.id }\n                    >\n                        { block.title }\n                    </button>\n                )}\n            </header>\n\n            { blocks.map((block: Block) => \n                <div\n                    id={ block.id }\n                    className={ merge(\"tab-content content p-2\", active === block.id ? \"\" : \"hidden\")}\n                >\n                    { block.content }\n                </div>\n            )}\n        </>\n    )\n}\n\nif (dom)\n    render(<App />, dom);\n\nfunction merge(...arr) {\n    return arr.join(\" \");\n}"],
  "mappings": "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",
  "names": ["slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "Fragment", "props", "children", "Component", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "indexOf", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "renderQueueLength", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "ownerSVGElement", "__h", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "createVNode", "isArray", "__b", "key", "ref", "EMPTY_OBJ", "reorderChildren", "placeChild", "parentNode", "getLastDom", "nextSibling", "unmount", "applyRef", "tmp", "placeChild", "parentDom", "childVNode", "oldVNode", "oldChildren", "newDom", "oldDom", "nextDom", "sibDom", "j", "__d", "parentNode", "outer", "appendChild", "nextSibling", "length", "insertBefore", "getLastDom", "vnode", "i", "child", "lastDom", "type", "__e", "__k", "diffProps", "dom", "newProps", "oldProps", "isSvg", "hydrate", "setProperty", "setStyle", "style", "key", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "removeAttribute", "setAttribute", "e", "options", "event", "diff", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "isHydrating", "tmp", "c", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "renderResult", "newType", "constructor", "__h", "__b", "props", "contextType", "__c", "__", "__E", "prototype", "render", "Component", "doRender", "sub", "state", "context", "__n", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "__P", "getChildContext", "getSnapshotBeforeUpdate", "diffChildren", "isArray", "Fragment", "children", "base", "diffElementNodes", "diffed", "indexOf", "commitRoot", "root", "some", "cb", "call", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "EMPTY_OBJ", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "checked", "applyRef", "ref", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "ownerSVGElement", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "Component", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "i", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "oldBeforeDiff", "options", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "getHookState", "index", "type", "__h", "hooks", "__H", "__", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "__", "hookItem", "__N", "EMPTY", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "__V", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "vnodeId", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "defaultProps", "options", "dom", "App", "blocks", "setBlocks", "h", "active", "setActive", "getBlocks", "data", "arr", "item", "first", "p", "o", "k", "block", "merge", "D"]
}
